# -*- coding: utf-8 -*-
#
# Copyright (C) 2019 CERN.
#
# My site is free software; you can redistribute it and/or modify it under
# the terms of the MIT License; see LICENSE file for more details.
#
# Example of a full-stack production environment for Invenio.
#
# Usage::
#
#   $ ./docker/build-images.sh
#   $ docker-compose -f docker-compose.full.yml up -d
#   $ ./docker/wait-for-services.sh --full
#   $ docker-compose -f docker-compose.full.yml run --rm web-ui ./scripts/setup
#
# This file is not intended to be used in production, but only serve as an
# example of a full production environment.
#
# Following services are included:
# - Load balancer: HAProxy (exposed ports: 80, 443, 8080)
# - Frontend server: Nginx (not exposed)
# - UI application: UWSGI (not exposed)
# - API application: UWSGI (not exposed)
# - Worker: Celery (not exposed)
# - Flower: Monitoring of Celery (exposed port: 5555)
# - Kibana: Inspect Elasticsearch (exposed port: 5601)
# - Cache: Redis (exposed port: 6379)
# - DB: (PostgresSQL/MySQL) (exposed port: 5432 or 3306)
# - Message queue: RabbitMQ (exposed ports: 5672, 15672)
# - Elasticsearch (exposed ports: 9200, 9300)
#
version: '2.3'
services:
  # Load balancer
  # http://127.0.0.1 (redirects to https)
  # https://127.0.0.1 (application)
  # http://127.0.0.1:8080 (HAProxy statistics)
  lb:
    extends:
      file: docker-services.yml
      service: lb
    links:
      - frontend
  # Frontend
  frontend:
    extends:
      file: docker-services.yml
      service: frontend
    volumes:
      - static_data:/opt/invenio/var/instance/static
      - static_data2:/opt/invenio/var/instance2/static
    links:
      - web-ui
      - web-api
      - web-ui2
      - web-api2
  # UI Application
  web-ui:
    extends:
      file: docker-services.yml
      service: app
    command: ["jinja2 scripts/instance.cfg > /opt/invenio/var/instance/invenio.cfg ;uwsgi /opt/invenio/var/instance/uwsgi_ui.ini"]
    image: my-site
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://my-site:my-site@db/my-site"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "SEARCH_INDEX_PREFIX=tenant1"
    ports:
      - "5000"
    volumes:
      - static_data:/opt/invenio/var/instance/static
    links:
      - cache
      - es
      - mq
      - db
  # API Rest Application
  web-api:
    extends:
      file: docker-services.yml
      service: app
    command: ["jinja2 scripts/instance.cfg > /opt/invenio/var/instance/invenio.cfg ; uwsgi /opt/invenio/var/instance/uwsgi_rest.ini"]
    image: my-site
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://my-site:my-site@db/my-site"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "SEARCH_INDEX_PREFIX=tenant1"
    ports:
      - "5001"
    volumes:
      - static_data:/opt/invenio/var/instance/static
    links:
      - cache
      - es
      - mq
      - db
  # UI Application
  web-ui2:
    extends:
      file: docker-services.yml
      service: app
    command: ["jinja2 /opt/invenio/src/scripts/instance2.cfg > /opt/invenio/var/instance/invenio.cfg ; uwsgi /opt/invenio/var/instance/uwsgi_ui.ini"]
    image: my-site
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://my-site:my-site@db/my-site2"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "SEARCH_INDEX_PREFIX=tenant2"
    ports:
      - "5000"
    volumes:
      - static_data2:/opt/invenio/var/instance/static
    links:
      - cache
      - es
      - mq
      - db
  # API Rest Application
  web-api2:
    extends:
      file: docker-services.yml
      service: app
    command: ["jinja2 scripts/instance2.cfg > /opt/invenio/var/instance/invenio.cfg ; uwsgi /opt/invenio/var/instance/uwsgi_rest.ini"]
    image: my-site
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://my-site:my-site@db/my-site2"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "SEARCH_INDEX_PREFIX=tenant2"
    ports:
      - "5001"
    volumes:
      - static_data2:/opt/invenio/var/instance/static
    links:
      - cache
      - es
      - mq
      - db
  # Worker
  worker:
    extends:
      file: docker-services.yml
      service: app
    restart: "always"
    command: ["celery worker -A invenio_app.celery --loglevel=INFO"]
    image: my-site
    links:
      - cache
      - es
      - mq
      - db
  # Monitoring of Celery
  # http://127.0.0.1:5555
  flower:
    extends:
      file: docker-services.yml
      service: flower
    links:
      - mq
  # Inspect Elasticsearch indexes
  # http://127.0.0.1:5601
  kibana:
    extends:
      file: docker-services.yml
      service: kibana
    links:
      - es
  # Base services
  cache:
    extends:
      file: docker-services.yml
      service: cache
  db:
    extends:
      file: docker-services.yml
      service: db
  # http://guest:guest@127.0.0.1:15672
  mq:
    extends:
      file: docker-services.yml
      service: mq
  es:
    extends:
      file: docker-services.yml
      service: es
volumes:
  static_data:
  static_data2:
